apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssvirt-ui
  labels:
    app: ssvirt-ui
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ssvirt-ui
  template:
    metadata:
      labels:
        app: ssvirt-ui
        component: frontend
    spec:
      containers:
        # Main UI container
        - name: ssvirt-ui
          image: quay.io/mhrivnak/ssvirt-ui:latest
          ports:
            - containerPort: 8080
              name: ui
              protocol: TCP
          volumeMounts:
            - name: config-volume
              mountPath: /opt/app-root/src/dist/config.json
              subPath: config.json
              readOnly: true
          resources:
            requests:
              memory: '128Mi'
              cpu: '100m'
            limits:
              memory: '512Mi'
              cpu: '500m'
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL

        # nginx proxy sidecar container
        - name: nginx-proxy
          image: registry.access.redhat.com/ubi9/nginx-126:latest
          command: ['nginx']
          args: ['-g', 'daemon off;']
          ports:
            - containerPort: 8081
              name: proxy
              protocol: TCP
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
          resources:
            requests:
              memory: '128Mi'
              cpu: '50m'
            limits:
              memory: '512Mi'
              cpu: '200m'
          livenessProbe:
            httpGet:
              path: /nginx-health
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /nginx-health
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL

      volumes:
        - name: config-volume
          configMap:
            name: ssvirt-ui-config
        - name: nginx-config
          configMap:
            name: ssvirt-nginx-config
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: ssvirt-ui
  labels:
    app: ssvirt-ui
    component: frontend
spec:
  selector:
    app: ssvirt-ui
  ports:
    - port: 8080
      targetPort: 8081
      protocol: TCP
      name: http
  type: ClusterIP
---
# OpenShift Route (preferred for OpenShift)
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: ssvirt-ui
  labels:
    app: ssvirt-ui
    component: frontend
spec:
  to:
    kind: Service
    name: ssvirt-ui
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
---
# Alternative: Kubernetes Ingress (for non-OpenShift clusters)
# Uncomment and configure the following if not using OpenShift Routes
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ssvirt-ui
#   labels:
#     app: ssvirt-ui
#     component: frontend
#   annotations:
#     # Configure your ingress controller specific annotations here
#     # nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   ingressClassName: nginx  # Adjust based on your ingress controller
#   rules:
#   - host: ssvirt-ui.your-domain.com  # Replace with your domain
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: ssvirt-ui
#             port:
#               number: 8080
#   tls:
#   - hosts:
#     - ssvirt-ui.your-domain.com  # Replace with your domain
#     secretName: ssvirt-ui-tls  # Replace with your TLS secret
